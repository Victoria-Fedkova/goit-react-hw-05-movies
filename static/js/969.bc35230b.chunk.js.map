{"version":3,"file":"static/js/969.bc35230b.chunk.js","mappings":"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","sources":["components/Cast/GoToTopBtn/GoToTopBtn.styled.jsx","components/Cast/GoToTopBtn/GoToTopBtn.jsx","components/Gallery/Gallery.styled.jsx","components/Gallery/GalleryItem/GalleryItem.styled.jsx","components/Gallery/GalleryItem/GalleryItem.jsx","components/Gallery/Gallery.jsx","components/LoadMoreBtn/LoadMoreBtn.styled.jsx","components/LoadMoreBtn/LoadMoreBtn.jsx","components/pages/Movies/MoviesPage.styled.jsx","components/pages/Movies/MoviesPage.js","components/pages/NotFound/Placeholder.styled.jsx","components/pages/NotFound/Placeholder.jsx","services/getMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { FaAngleUp } from 'react-icons/fa';\n\nexport const Btn = styled.div`\n  .top-to-btm {\n    position: relative;\n  }\n`;\n\nexport const Icon = styled(FaAngleUp)`\n  position: fixed;\n  bottom: 40px;\n  right: 25px;\n  z-index: 20;\n\n  background-color: #1e96c8;\n  border: 2px solid #fff;\n  border-radius: 50%;\n  height: 50px;\n  width: 50px;\n  color: #fff;\n  cursor: pointer;\n  animation: movebtn 3s ease-in-out infinite;\n  transition: all 0.5s ease-in-out;\n\n  &:hover {\n    animation: none;\n    background: #fff;\n    color: #1e96c8;\n    border: 2px solid #1e96c8;\n  }\n\n  @keyframes movebtn {\n    0% {\n      transform: translateY(0px);\n    }\n    25% {\n      transform: translateY(20px);\n    }\n    50% {\n      transform: translateY(0px);\n    }\n    75% {\n      transform: translateY(-20px);\n    }\n    100% {\n      transform: translateY(0px);\n    }\n  }\n`;\n","import { useState, useEffect } from 'react';\n// import { FaAngleUp } from 'react-icons/fa';\nimport { Btn, Icon } from './GoToTopBtn.styled';\n\nconst ScrollToTop = () => {\n  const [showTopBtn, setShowTopBtn] = useState(false);\n  useEffect(() => {\n    window.addEventListener('scroll', () => {\n      if (window.scrollY > 400) {\n        setShowTopBtn(true);\n      } else {\n        setShowTopBtn(false);\n      }\n    });\n  }, []);\n  const goToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n  return (\n    <Btn className=\"top-to-btm\">\n      {' '}\n      {showTopBtn && (\n        <Icon className=\"icon-position icon-style\" onClick={goToTop} />\n      )}{' '}\n    </Btn>\n  );\n};\nexport default ScrollToTop;\n","import styled from '@emotion/styled';\n\nexport const GalleryGrid = styled.ul`\n  max-width: 1280px;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 12px;\n  padding-right: 12px;\n\n  display: grid;\n  grid-template-columns: repeat(1, minmax(210, 1fr));\n  grid-template-rows: repeat(auto-fit, minmax(210, 1fr));\n  grid-row-gap: 20px;\n\n  @media (min-width: 768px) {\n    display: grid;\n    grid-template-columns: repeat(2, minmax(336px, 1fr));\n\n    grid-template-rows: repeat(auto-fit, 1fr);\n    grid-column-gap: 32px;\n    grid-row-gap: 32px;\n  }\n\n  @media (min-width: 1280px) {\n    display: grid;\n    grid-template-columns: repeat(4, 302px);\n    grid-template-rows: repeat(auto-fit, 204px);\n    grid-template-rows: auto;\n\n    grid-column-gap: 16px;\n    grid-row-gap: 16px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const GalleryItemCard = styled.li`\n  cursor: pointer;\n  transition: all 250ms linear;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  position: relative;\n  height: 100%;\n  overflow: hidden;\n\n  &:hover div {\n    transform: translateY(0);\n  }\n`;\nexport const GalleryCardInfo = styled.div`\n  background-color: #20141491;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: 10px;\n  transform: translateY(100%);\n  transition: all 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n`;\nexport const GalleryLink = styled(Link)`\n  text-decoration: none;\n  color: #0dccea;\n`;\n\nexport const GalleryImg = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  GalleryCardInfo,\n  GalleryImg,\n  GalleryItemCard,\n  GalleryLink,\n} from './GalleryItem.styled';\nconst { useLocation } = require('react-router-dom');\n\nconst GalleryItem = ({\n  movie: { title, w300imgUrl, w500imgUrl, year, id },\n}) => {\n  const location = useLocation();\n  return (\n    <GalleryItemCard>\n      <GalleryLink to={`/movies/${id}`} state={{ from: location }}>\n        <GalleryImg\n          srcSet={`${w300imgUrl} 300w, ${w500imgUrl} 500w`}\n          sizes={'(max-width: 767px) 300px, (min-width: 768px) 500px'}\n          src={w500imgUrl}\n          alt={title}\n          loading=\"lazy\"\n        />\n        <GalleryCardInfo>\n          <h3>{title}</h3>\n          <p>{year}</p>\n        </GalleryCardInfo>\n      </GalleryLink>\n    </GalleryItemCard>\n  );\n};\n\nGalleryItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    w300imgUrl: PropTypes.string.isRequired,\n    w500imgUrl: PropTypes.string.isRequired,\n    year: PropTypes.string.isRequired,\n  }),\n};\n\nexport default GalleryItem;\n","import { GalleryGrid } from './Gallery.styled';\nimport GalleryItem from './GalleryItem/GalleryItem';\nimport PropTypes from 'prop-types';\n\nconst Gallery = ({ movies }) => {\n  return (\n    <GalleryGrid>\n      {movies &&\n        movies.map(movie => <GalleryItem key={movie.id} movie={movie} />)}\n    </GalleryGrid>\n  );\n};\n\nGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      w300imgUrl: PropTypes.string.isRequired,\n      w500imgUrl: PropTypes.string.isRequired,\n      year: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default Gallery;\n","import styled from '@emotion/styled';\n\nexport const LoadMoreBtn = styled.button`\n  display: inline-block;\n  margin: auto;\n  margin-bottom: 30px;\n  background-image: linear-gradient(-180deg, #0dccea 0%, #1e96c8 100%);\n  border-radius: 0.5rem;\n  box-sizing: border-box;\n  color: #ffffff;\n  display: flex;\n  font-size: 16px;\n  justify-content: center;\n  padding: 1rem 1.75rem;\n  text-decoration: none;\n  border: 0;\n  cursor: pointer;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  transition: all 350ms linear;\n\n  &:hover,\n  &:focus {\n    background-image: linear-gradient(-90deg, #1e96c8 0%, #0dccea 100%);\n  }\n`;\n","import { LoadMoreBtn } from './LoadMoreBtn.styled';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onLoadMore }) => {\n  return (\n    <LoadMoreBtn type=\"button\" onClick={onLoadMore}>\n      Load more\n    </LoadMoreBtn>\n  );\n};\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import styled from '@emotion/styled';\nexport const HeadingWraper = styled.div`\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  gap: 20px;\n  max-width: 1280px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 12px;\n  padding-right: 12px;\n  & h1 {\n    margin: 0;\n    padding: 0;\n  }\n\n  @media (min-width: 768px) {\n    width: 768px;\n  }\n  @media (min-width: 1280px) {\n    width: 1280px;\n  }\n`;\n\nexport const Form = styled.form`\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border: 1px solid #1e96c8;\n\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchInput = styled.input`\n  margin: 0 auto;\n  width: 100%;\n  height: 30px;\n\n  padding: 0 20px;\n  font-size: 1rem;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n  transition: 0.35s ease;\n  & :focus,\n  &:hover,\n  &:not(:placeholder-shown) {\n    color: #1e96c8;\n  }\n  &:hover::placeholder {\n    color: #1e96c8;\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  float: right;\n  width: 48px;\n  height: 48px;\n  top: 0px;\n  right: 0px;\n  border: none;\n  background-color: transparent;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    transform: scale(1.2);\n    outline: none;\n  }\n`;\n","import { useEffect, useMemo, useState } from 'react';\nimport { FaSearch } from 'react-icons/fa';\nimport Notiflix from 'notiflix';\nimport { getMovieByQuery, getMoviesInfo } from 'services/getMovies';\nimport Gallery from 'components/Gallery/Gallery';\nimport { useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport {\n  Form,\n  SearchInput,\n  SearchBtn,\n  HeadingWraper,\n} from './MoviesPage.styled';\nimport Button from 'components/LoadMoreBtn/LoadMoreBtn';\nimport PlaceholderSerch from '../NotFound/Placeholder';\nimport ScrollToTop from 'components/Cast/GoToTopBtn/GoToTopBtn';\n// import PlaceholderSerch from '../NotFound/Placeholder';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsloading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  // const location = useLocation();\n  const [totalPages, settTotalPages] = useState(0);\n  const [totalResults, setTotalResults] = useState(0);\n  const [error, setError] = useState(false);\n\n  const { query, page } = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { value } = e.currentTarget.elements.query;\n    if (!value.trim()) {\n      Notiflix.Notify.failure('Sorry, incorect query. Please try again.');\n      return;\n    }\n    setSearchParams({ query: value, page: 1 });\n    // e.currentTarget.reset();\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    setIsloading(true);\n\n    getMovieByQuery(query, page)\n      .then(response => {\n        if (response.status !== 200) {\n          throw new Error(`Error in request: ${response.status}`);\n        }\n\n        if (!response.data.results.length) {\n          setError(true);\n          console.log('oops res', response.data.total_results);\n          setIsloading(false);\n          return console.log(\n            'There is no movies with this request. Please, try again'\n          );\n        }\n        setError(false);\n        settTotalPages(response.data.total_pages);\n        setTotalResults(response.data.total_results);\n        // console.log(response.data.total_results);\n        // console.log(response.data.total_pages);\n\n        setMovies(prevState => [\n          ...prevState,\n          ...getMoviesInfo(response.data.results),\n        ]);\n        // setIsFound(response.data.results.length > 0);\n      })\n      .catch(e => console.error(e))\n      .finally(() => setIsloading(false));\n  }, [query, page, searchParams]);\n\n  const onLoadMore = () => {\n    const prevPage = searchParams.get('page') ?? 1;\n    const query = searchParams.get('query');\n    setSearchParams({ query, page: Number(prevPage) + 1 });\n  };\n\n  // console.log('---------------');\n  // console.log('movies.length === 0', movies.length === 0);\n  // console.log('query', query);\n  // console.log('!isLoading', !isLoading);\n  // console.log('---------------');\n  return (\n    <>\n      <HeadingWraper>\n        <h1>Searching movies</h1>\n        <Form onSubmit={handleSubmit}>\n          <SearchInput type=\"text\" name=\"query\" autoComplete=\"off\" autoFocus />\n          <SearchBtn type=\"submit\">\n            <FaSearch />\n          </SearchBtn>\n        </Form>\n      </HeadingWraper>\n      {isLoading && <Loader />}\n      {!error && query && totalResults && (\n        <>\n          <Gallery movies={movies} />\n          {page < totalPages && <Button onLoadMore={onLoadMore} />}\n        </>\n      )}\n      {error && query && !isLoading && <PlaceholderSerch />}\n      <ScrollToTop />\n    </>\n  );\n};\nexport default MoviesPage;\n","import styled from '@emotion/styled';\nimport img2 from './404-we-cant-find.webp';\nexport const Placeholder = styled.div`\n  color: transparent;\n  max-width: 1280px;\n  height: 100vh;\n  margin-left: auto;\n  margin-right: auto;\n  background-image: url(${img2});\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n`;\n","import { Placeholder } from './Placeholder.styled';\n\nconst PlaceholderSerch = () => {\n  // console.log('oooooops!');\n  return <Placeholder> Page not found</Placeholder>;\n};\nexport default PlaceholderSerch;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ae38d5c8baf36c9c4ca14e9456f3c0fd';\n//зображення що завантажиться при відсутності постеру\nconst DEFAULT_IMG =\n  'https://upload.wikimedia.org/wikipedia/commons/3/3f/Placeholder_view_vector.svg';\nconst DEFAULT_AVATAR =\n  'https://cdn3.iconfinder.com/data/icons/avatars-15/64/_Ninja-2-512.png';\n\n//запит до серверу, що отримує дані популярних фільмів\nexport const getPopularMovie = async pageNumber => {\n  const data = await axios(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${\n      pageNumber ? pageNumber : 1\n    }`\n  );\n  return data;\n};\n\n//запит на сервер, пошук фільмів за ключовими словами\nexport const getMovieByQuery = async (query, pageNumber) => {\n  const data = await axios(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${\n      pageNumber ? pageNumber : 1\n    }`\n  );\n  return data;\n};\n\n// функція обробник повернення масиву об\"єктів даних про фільми\nexport const getMoviesInfo = moviesArr => {\n  return moviesArr.map(movie => {\n    const movieInfo = {\n      title: movie.title ? movie.title : movie.name, //назва\n      w300imgUrl: movie.poster_path\n        ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n        : DEFAULT_IMG, // постер, або дефолтна картинка за відсутності постера\n      w500imgUrl: movie.poster_path\n        ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n        : DEFAULT_IMG, // постер, або дефолтна картинка за відсутності постера\n      year: movie.release_date\n        ? movie.release_date.slice(0, 4)\n        : movie?.first_air_date?.slice(0, 4) || '', //рік\n      id: movie.id,\n    };\n    return movieInfo;\n  });\n};\n\n//запит, що отримує інформацію про фільм за ID\nexport const getMovieById = async id => {\n  const data = await axios(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\n//запит на акторський склад\nexport const getCastInfo = async id => {\n  const data = await axios(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const getCastInfoObj = castArr => {\n  return castArr.map(actor => {\n    const castInfo = {\n      name: actor.name ? actor.name : actor.original_name,\n      w300imgUrl: actor.poster_path\n        ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n        : DEFAULT_IMG,\n      w500imgUrl: actor.profile_path\n        ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n        : DEFAULT_IMG,\n      character: actor.character,\n      id: actor.id,\n    };\n    return castInfo;\n  });\n};\n\nexport const getReviews = async id => {\n  console.log(id);\n  const data = await axios(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\nexport const getReviewsInfo = reviewsArr => {\n  return reviewsArr.map(review => {\n    const reviewInfo = {\n      avatar_path: review.author_details.avatar_path.includes('https')\n        ? DEFAULT_AVATAR\n        : `https://www.themoviedb.org/t/p/w300_and_h300_face${review.author_details.avatar_path}`,\n      username: review.author_details.username,\n      name: review.author_details.name\n        ? review.author_details.name\n        : review.author,\n      content: review.content,\n      id: review.id,\n    };\n    return reviewInfo;\n  });\n};\n\n// функція обробник повертає об\"єкт з детальною інформацією по фільму, в інших файлах не використовується\nexport const getMoviesDetails = movie => {\n  let genres = movie.genres.map(elem => elem.name);\n  let cutGenres;\n  if (genres.length === 0) {\n    cutGenres = 'Other';\n  } else if (genres.length <= 2) {\n    cutGenres = genres.join(', ');\n  } else {\n    cutGenres = `${genres.slice(0, 2).join(', ')}, Other`;\n  }\n  return {\n    title: movie.title ? movie.title : movie.name, //назва\n    titleOriginal: movie.original_title, // оригінальна назва\n    popularity: movie.popularity, //популярність\n    vote: movie.vote_average, // середній рейтинг\n    votes: movie.vote_count, // кількість голосів\n    w300imgUrl: movie.poster_path\n      ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n      : DEFAULT_IMG, // постер, або дефолтна картинка за відсутності постера\n    w500imgUrl: movie.poster_path\n      ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n      : DEFAULT_IMG, // постер, або дефолтна картинка за відсутності постера\n    genres: cutGenres, // жанри\n    about: movie.overview,\n    year: movie.release_date\n      ? movie.release_date.slice(0, 4)\n      : movie?.first_air_date?.slice(0, 4) || '',\n  };\n};\n"],"names":["Btn","styled","Icon","FaAngleUp","useState","showTopBtn","setShowTopBtn","useEffect","window","addEventListener","scrollY","className","onClick","scrollTo","top","behavior","GalleryGrid","GalleryItemCard","GalleryCardInfo","GalleryLink","Link","GalleryImg","useLocation","require","movie","title","w300imgUrl","w500imgUrl","year","id","location","to","state","from","srcSet","sizes","src","alt","loading","movies","map","LoadMoreBtn","onLoadMore","type","HeadingWraper","Form","SearchInput","SearchBtn","setMovies","isLoading","setIsloading","useSearchParams","searchParams","setSearchParams","totalPages","settTotalPages","totalResults","setTotalResults","error","setError","useMemo","Object","fromEntries","query","page","getMovieByQuery","then","response","status","Error","data","results","length","console","log","total_results","total_pages","prevState","getMoviesInfo","catch","e","finally","onSubmit","preventDefault","value","currentTarget","elements","trim","Notiflix","name","autoComplete","autoFocus","Loader","Gallery","prevPage","get","Number","Placeholder","img2","BASE_URL","API_KEY","DEFAULT_IMG","getPopularMovie","pageNumber","axios","moviesArr","poster_path","release_date","slice","first_air_date","getMovieById","getCastInfo","getCastInfoObj","castArr","actor","original_name","profile_path","character","getReviews","getReviewsInfo","reviewsArr","review","avatar_path","author_details","includes","username","author","content","getMoviesDetails","cutGenres","genres","elem","join","titleOriginal","original_title","popularity","vote","vote_average","votes","vote_count","about","overview"],"sourceRoot":""}