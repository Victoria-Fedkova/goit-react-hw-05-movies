{"version":3,"file":"static/js/63.6a815e44.chunk.js","mappings":"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","sources":["components/Gallery/Gallery.styled.jsx","components/Gallery/GalleryItem/GalleryItem.styled.jsx","components/Gallery/GalleryItem/GalleryItem.jsx","components/Gallery/Gallery.jsx","components/LoadMoreBtn/LoadMoreBtn.styled.jsx","components/LoadMoreBtn/LoadMoreBtn.jsx","components/pages/Movies/MoviesPage.styled.jsx","components/pages/Movies/MoviesPage.js","services/getMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const GalleryGrid = styled.ul`\n  max-width: 1280px;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 12px;\n  padding-right: 12px;\n\n  display: grid;\n  grid-template-columns: repeat(1, minmax(210, 1fr));\n  grid-template-rows: repeat(auto-fit, minmax(210, 1fr));\n  grid-row-gap: 20px;\n\n  @media (min-width: 768px) {\n    display: grid;\n    grid-template-columns: repeat(2, minmax(336px, 1fr));\n\n    grid-template-rows: repeat(auto-fit, 224px);\n    grid-column-gap: 32px;\n    grid-row-gap: 32px;\n  }\n\n  @media (min-width: 1280px) {\n    display: grid;\n    grid-template-columns: repeat(4, 302px);\n    grid-template-rows: repeat(auto-fit, 204px);\n    grid-template-rows: auto;\n\n    grid-column-gap: 16px;\n    grid-row-gap: 16px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const GalleryItemCard = styled.li`\n  cursor: pointer;\n  transition: all 250ms linear;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  position: relative;\n  height: 100%;\n  overflow: hidden;\n\n  &:hover div {\n    transform: translateY(0);\n  }\n`;\nexport const GalleryCardInfo = styled.div`\n  background-color: #20141491;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: 10px;\n  transform: translateY(100%);\n  transition: all 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n`;\nexport const GalleryLink = styled(Link)`\n  text-decoration: none;\n  color: #0dccea;\n`;\n\nexport const GalleryImg = styled.img`\n  display: block;\n  width: 100%;\n  // height: 100%;\n  object-fit: cover;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  GalleryCardInfo,\n  GalleryImg,\n  GalleryItemCard,\n  GalleryLink,\n} from './GalleryItem.styled';\nconst { useLocation } = require('react-router-dom');\n\nconst GalleryItem = ({\n  movie: { title, w300imgUrl, w500imgUrl, year, id },\n}) => {\n  const location = useLocation();\n  return (\n    <GalleryItemCard>\n      <GalleryLink to={`/movies/${id}`} state={{ from: location }}>\n        <GalleryImg\n          srcSet={`${w300imgUrl} 300w, ${w500imgUrl} 500w`}\n          sizes={'(max-width: 767px) 300px, (min-width: 768px) 500px'}\n          src={w500imgUrl}\n          alt={title}\n          loading=\"lazy\"\n        />\n        <GalleryCardInfo>\n          <h3>{title}</h3>\n          <p>{year}</p>\n        </GalleryCardInfo>\n      </GalleryLink>\n    </GalleryItemCard>\n  );\n};\n\nGalleryItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    w300imgUrl: PropTypes.string.isRequired,\n    w500imgUrl: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n  }),\n};\n\nexport default GalleryItem;\n","import { GalleryGrid } from './Gallery.styled';\nimport GalleryItem from './GalleryItem/GalleryItem';\nimport PropTypes from 'prop-types';\n\nconst Gallery = ({ movies }) => {\n  return (\n    <GalleryGrid>\n      {movies &&\n        movies.map(movie => <GalleryItem key={movie.id} movie={movie} />)}\n    </GalleryGrid>\n  );\n};\n\nGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      w300imgUrl: PropTypes.string.isRequired,\n      w500imgUrl: PropTypes.string.isRequired,\n      year: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default Gallery;\n","import styled from '@emotion/styled';\n\nexport const LoadMoreBtn = styled.button`\n  display: inline-block;\n  margin: auto;\n  margin-bottom: 30px;\n  background-image: linear-gradient(-180deg, #0dccea 0%, #1e96c8 100%);\n  border-radius: 0.5rem;\n  box-sizing: border-box;\n  color: #ffffff;\n  display: flex;\n  font-size: 16px;\n  justify-content: center;\n  padding: 1rem 1.75rem;\n  text-decoration: none;\n  border: 0;\n  cursor: pointer;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  transition: all 350ms linear;\n\n  &:hover,\n  &:focus {\n    background-image: linear-gradient(-90deg, #1e96c8 0%, #0dccea 100%);\n  }\n`;\n","import { LoadMoreBtn } from './LoadMoreBtn.styled';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onLoadMore }) => {\n  return (\n    <LoadMoreBtn type=\"button\" onClick={onLoadMore}>\n      Load more\n    </LoadMoreBtn>\n  );\n};\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import styled from '@emotion/styled';\nexport const HeadingWraper = styled.div`\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  gap: 20px;\n  max-width: 1280px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 12px;\n  padding-right: 12px;\n  & h1 {\n    margin: 0;\n    padding: 0;\n  }\n\n  @media (min-width: 768px) {\n    width: 768px;\n  }\n  @media (min-width: 1280px) {\n    width: 1280px;\n  }\n`;\n\nexport const Form = styled.form`\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border: 1px solid #1e96c8;\n\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchInput = styled.input`\n  margin: 0 auto;\n  width: 100%;\n  height: 30px;\n\n  padding: 0 20px;\n  font-size: 1rem;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n  transition: 0.35s ease;\n  & :focus,\n  &:hover,\n  &:not(:placeholder-shown) {\n    color: #1e96c8;\n  }\n  &:hover::placeholder {\n    color: #1e96c8;\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  float: right;\n  width: 48px;\n  height: 48px;\n  top: 0px;\n  right: 0px;\n  border: none;\n  background-color: transparent;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    transform: scale(1.2);\n    outline: none;\n  }\n`;\n","import { useEffect, useMemo, useState } from 'react';\nimport { FaSearch } from 'react-icons/fa';\nimport Notiflix from 'notiflix';\nimport { getMovieByQuery, getMoviesInfo } from 'services/getMovies';\nimport Gallery from 'components/Gallery/Gallery';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport {\n  Form,\n  SearchInput,\n  SearchBtn,\n  HeadingWraper,\n} from './MoviesPage.styled';\nimport Button from 'components/LoadMoreBtn/LoadMoreBtn';\n// import PlaceholderSerch from '../NotFound/Placeholder';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsloading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const [totalPages, settTotalPages] = useState(0);\n  const [isFound, setIsFound] = useState(true);\n\n  const { query, page } = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { value } = e.currentTarget.elements.query;\n    if (!value.trim()) {\n      Notiflix.Notify.failure('Sorry, incorect query. Please try again.');\n      return;\n    }\n    setSearchParams({ query: value, page: 1 });\n    // e.currentTarget.reset();\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    setIsloading(true);\n\n    getMovieByQuery(query, page)\n      .then(response => {\n        if (response.status !== 200) {\n          throw new Error(`Error in request: ${response.status}`);\n        }\n        settTotalPages(response.data.total_pages);\n\n        //обробка результату функцією getMoviesInfo прокидання отриманого обʼєкту в функцію обробник щоб витягнути необхідні поля\n        setMovies(prevState => [\n          ...prevState,\n          ...getMoviesInfo(response.data.results),\n        ]);\n\n        setIsFound(response.data.results.length > 0);\n      })\n      .catch(e => console.error(e))\n      .finally(() => setIsloading(false));\n  }, [query, page, searchParams]);\n\n  const onLoadMore = () => {\n    const prevPage = searchParams.get('page') ?? 1;\n    const query = searchParams.get('query');\n    setSearchParams({ query, page: Number(prevPage) + 1 });\n  };\n\n  // console.log('---------------');\n  // console.log('movies.length === 0', movies.length === 0);\n  // console.log('query', query);\n  // console.log('!isLoading', !isLoading);\n  // console.log('---------------');\n  return (\n    <>\n      <HeadingWraper>\n        <h1>Searching movies</h1>\n        <Form onSubmit={handleSubmit}>\n          <SearchInput type=\"text\" name=\"query\" autoComplete=\"off\" autoFocus />\n          <SearchBtn type=\"submit\">\n            <FaSearch />\n          </SearchBtn>\n        </Form>\n      </HeadingWraper>\n      {isLoading && <Loader />}\n      {isFound && query && !isLoading && (\n        <>\n          <Gallery movies={movies} location={location} />\n          {page < totalPages && <Button onLoadMore={onLoadMore} />}\n        </>\n        // ) : (\n        // <PlaceholderSerch />\n      )}\n    </>\n  );\n};\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ae38d5c8baf36c9c4ca14e9456f3c0fd';\n//зображення що завантажиться при відсутності постеру\nconst DEFAULT_IMG =\n  'https://upload.wikimedia.org/wikipedia/commons/3/3f/Placeholder_view_vector.svg';\n\n//запит до серверу, що отримує дані популярних фільмів\nexport const getPopularMovie = async pageNumber => {\n  const data = await axios(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${\n      pageNumber ? pageNumber : 1\n    }`\n  );\n  return data;\n};\n\n//запит на сервер, пошук фільмів за ключовими словами\nexport const getMovieByQuery = async (query, pageNumber) => {\n  const data = await axios(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${\n      pageNumber ? pageNumber : 1\n    }`\n  );\n  return data;\n};\n\n// функція обробник повернення масиву об\"єктів даних про фільми\nexport const getMoviesInfo = moviesArr => {\n  return moviesArr.map(movie => {\n    const movieInfo = {\n      title: movie.title ? movie.title : movie.name, //назва\n      w300imgUrl: movie.poster_path\n        ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n        : DEFAULT_IMG, // постер, або дефолтна картинка за відсутності постера\n      w500imgUrl: movie.poster_path\n        ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n        : DEFAULT_IMG, // постер, або дефолтна картинка за відсутності постера\n      year: movie.release_date\n        ? movie.release_date.slice(0, 4)\n        : movie?.first_air_date?.slice(0, 4) || '', //рік\n      id: movie.id,\n    };\n    return movieInfo;\n  });\n};\n\n//запит, що отримує інформацію про фільм за ID\nexport const getMovieById = async id => {\n  const data = await axios(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\n//запит на акторський склад\nexport const getCastInfo = async id => {\n  const data = await axios(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const getCastInfoObj = castArr => {\n  return castArr.map(actor => {\n    const castInfo = {\n      name: actor.name ? actor.name : actor.original_name,\n      w300imgUrl: actor.poster_path\n        ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n        : DEFAULT_IMG,\n      w500imgUrl: actor.profile_path\n        ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n        : DEFAULT_IMG,\n      character: actor.character,\n      id: actor.id,\n    };\n    return castInfo;\n  });\n};\n\nexport const getReviews = async id => {\n  console.log(id);\n  const data = await axios(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\nexport const getReviewsInfo = reviewsArr => {\n  return reviewsArr.map(review => {\n    const reviewInfo = {\n      author: review.author,\n      content: review.content,\n      id: review.id,\n    };\n    return reviewInfo;\n  });\n};\n\n// функція обробник повертає об\"єкт з детальною інформацією по фільму, в інших файлах не використовується\nexport const getMoviesDetails = movie => {\n  let genres = movie.genres.map(elem => elem.name);\n  let cutGenres;\n  if (genres.length === 0) {\n    cutGenres = 'Other';\n  } else if (genres.length <= 2) {\n    cutGenres = genres.join(', ');\n  } else {\n    cutGenres = `${genres.slice(0, 2).join(', ')}, Other`;\n  }\n  return {\n    title: movie.title ? movie.title : movie.name, //назва\n    titleOriginal: movie.original_title, // оригінальна назва\n    popularity: movie.popularity, //популярність\n    vote: movie.vote_average, // середній рейтинг\n    votes: movie.vote_count, // кількість голосів\n    w300imgUrl: movie.poster_path\n      ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n      : DEFAULT_IMG, // постер, або дефолтна картинка за відсутності постера\n    w500imgUrl: movie.poster_path\n      ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n      : DEFAULT_IMG, // постер, або дефолтна картинка за відсутності постера\n    genres: cutGenres, // жанри\n    about: movie.overview,\n    year: movie.release_date\n      ? movie.release_date.slice(0, 4)\n      : movie?.first_air_date?.slice(0, 4) || '',\n  };\n};\n"],"names":["GalleryGrid","styled","GalleryItemCard","GalleryCardInfo","GalleryLink","Link","GalleryImg","useLocation","require","movie","title","w300imgUrl","w500imgUrl","year","id","location","to","state","from","srcSet","sizes","src","alt","loading","movies","map","LoadMoreBtn","onLoadMore","type","onClick","HeadingWraper","Form","SearchInput","SearchBtn","useState","setMovies","isLoading","setIsloading","useSearchParams","searchParams","setSearchParams","totalPages","settTotalPages","isFound","setIsFound","useMemo","Object","fromEntries","query","page","useEffect","getMovieByQuery","then","response","status","Error","data","total_pages","prevState","getMoviesInfo","results","length","catch","e","console","error","finally","onSubmit","preventDefault","value","currentTarget","elements","trim","Notiflix","name","autoComplete","autoFocus","Loader","Gallery","prevPage","get","Number","BASE_URL","API_KEY","DEFAULT_IMG","getPopularMovie","pageNumber","axios","moviesArr","poster_path","release_date","slice","first_air_date","getMovieById","getCastInfo","getCastInfoObj","castArr","actor","original_name","profile_path","character","getReviews","log","getReviewsInfo","reviewsArr","review","author","content","getMoviesDetails","cutGenres","genres","elem","join","titleOriginal","original_title","popularity","vote","vote_average","votes","vote_count","about","overview"],"sourceRoot":""}