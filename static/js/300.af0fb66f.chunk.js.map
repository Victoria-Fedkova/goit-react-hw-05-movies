{"version":3,"file":"static/js/300.af0fb66f.chunk.js","mappings":"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","sources":["components/Cast/GoToTopBtn/GoToTopBtn.styled.jsx","components/Cast/GoToTopBtn/GoToTopBtn.jsx","components/Gallery/Gallery.styled.jsx","components/Gallery/GalleryItem/GalleryItem.styled.jsx","components/Gallery/GalleryItem/GalleryItem.jsx","components/Gallery/Gallery.jsx","components/LoadMoreBtn/LoadMoreBtn.styled.jsx","components/LoadMoreBtn/LoadMoreBtn.jsx","components/pages/Home/HomePage.styled.jsx","components/pages/Home/HomePage.js","services/getMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { FaAngleUp } from 'react-icons/fa';\n\nexport const Btn = styled.div`\n  .top-to-btm {\n    position: relative;\n  }\n`;\n\nexport const Icon = styled(FaAngleUp)`\n  position: fixed;\n  bottom: 40px;\n  right: 25px;\n  z-index: 20;\n\n  background-color: #1e96c8;\n  border: 2px solid #fff;\n  border-radius: 50%;\n  height: 50px;\n  width: 50px;\n  color: #fff;\n  cursor: pointer;\n  animation: movebtn 3s ease-in-out infinite;\n  transition: all 0.5s ease-in-out;\n\n  &:hover {\n    animation: none;\n    background: #fff;\n    color: #1e96c8;\n    border: 2px solid #1e96c8;\n  }\n\n  @keyframes movebtn {\n    0% {\n      transform: translateY(0px);\n    }\n    25% {\n      transform: translateY(20px);\n    }\n    50% {\n      transform: translateY(0px);\n    }\n    75% {\n      transform: translateY(-20px);\n    }\n    100% {\n      transform: translateY(0px);\n    }\n  }\n`;\n","import { useState, useEffect } from 'react';\n// import { FaAngleUp } from 'react-icons/fa';\nimport { Btn, Icon } from './GoToTopBtn.styled';\n\nconst ScrollToTop = () => {\n  const [showTopBtn, setShowTopBtn] = useState(false);\n  useEffect(() => {\n    window.addEventListener('scroll', () => {\n      if (window.scrollY > 400) {\n        setShowTopBtn(true);\n      } else {\n        setShowTopBtn(false);\n      }\n    });\n  }, []);\n  const goToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n  return (\n    <Btn className=\"top-to-btm\">\n      {' '}\n      {showTopBtn && (\n        <Icon className=\"icon-position icon-style\" onClick={goToTop} />\n      )}{' '}\n    </Btn>\n  );\n};\nexport default ScrollToTop;\n","import styled from '@emotion/styled';\n\nexport const GalleryGrid = styled.ul`\n  max-width: 1280px;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 12px;\n  padding-right: 12px;\n\n  display: grid;\n  grid-template-columns: repeat(1, minmax(210, 1fr));\n  grid-template-rows: repeat(auto-fit, minmax(210, 1fr));\n  grid-row-gap: 20px;\n\n  @media (min-width: 768px) {\n    display: grid;\n    grid-template-columns: repeat(2, minmax(336px, 1fr));\n\n    grid-template-rows: repeat(auto-fit, 1fr);\n    grid-column-gap: 32px;\n    grid-row-gap: 32px;\n  }\n\n  @media (min-width: 1280px) {\n    display: grid;\n    grid-template-columns: repeat(4, 302px);\n    grid-template-rows: repeat(auto-fit, 204px);\n    grid-template-rows: auto;\n\n    grid-column-gap: 16px;\n    grid-row-gap: 16px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const GalleryItemCard = styled.li`\n  cursor: pointer;\n  transition: all 250ms linear;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  position: relative;\n  height: 100%;\n  overflow: hidden;\n\n  &:hover div {\n    transform: translateY(0);\n  }\n`;\nexport const GalleryCardInfo = styled.div`\n  background-color: #20141491;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: 10px;\n  transform: translateY(100%);\n  transition: all 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n`;\nexport const GalleryLink = styled(Link)`\n  text-decoration: none;\n  color: #0dccea;\n`;\n\nexport const GalleryImg = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  GalleryCardInfo,\n  GalleryImg,\n  GalleryItemCard,\n  GalleryLink,\n} from './GalleryItem.styled';\nconst { useLocation } = require('react-router-dom');\n\nconst GalleryItem = ({\n  movie: { title, w300imgUrl, w500imgUrl, year, id },\n}) => {\n  const location = useLocation();\n  return (\n    <GalleryItemCard>\n      <GalleryLink to={`/movies/${id}`} state={{ from: location }}>\n        <GalleryImg\n          srcSet={`${w300imgUrl} 300w, ${w500imgUrl} 500w`}\n          sizes={'(max-width: 767px) 300px, (min-width: 768px) 500px'}\n          src={w500imgUrl}\n          alt={title}\n          loading=\"lazy\"\n        />\n        <GalleryCardInfo>\n          <h3>{title}</h3>\n          <p>{year}</p>\n        </GalleryCardInfo>\n      </GalleryLink>\n    </GalleryItemCard>\n  );\n};\n\nGalleryItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    w300imgUrl: PropTypes.string.isRequired,\n    w500imgUrl: PropTypes.string.isRequired,\n    year: PropTypes.string.isRequired,\n  }),\n};\n\nexport default GalleryItem;\n","import { GalleryGrid } from './Gallery.styled';\nimport GalleryItem from './GalleryItem/GalleryItem';\nimport PropTypes from 'prop-types';\n\nconst Gallery = ({ movies }) => {\n  return (\n    <GalleryGrid>\n      {movies &&\n        movies.map(movie => <GalleryItem key={movie.id} movie={movie} />)}\n    </GalleryGrid>\n  );\n};\n\nGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      w300imgUrl: PropTypes.string.isRequired,\n      w500imgUrl: PropTypes.string.isRequired,\n      year: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default Gallery;\n","import styled from '@emotion/styled';\n\nexport const LoadMoreBtn = styled.button`\n  display: inline-block;\n  margin: auto;\n  margin-bottom: 30px;\n  background-image: linear-gradient(-180deg, #0dccea 0%, #1e96c8 100%);\n  border-radius: 0.5rem;\n  box-sizing: border-box;\n  color: #ffffff;\n  display: flex;\n  font-size: 16px;\n  justify-content: center;\n  padding: 1rem 1.75rem;\n  text-decoration: none;\n  border: 0;\n  cursor: pointer;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  transition: all 350ms linear;\n\n  &:hover,\n  &:focus {\n    background-image: linear-gradient(-90deg, #1e96c8 0%, #0dccea 100%);\n  }\n`;\n","import { LoadMoreBtn } from './LoadMoreBtn.styled';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onLoadMore }) => {\n  return (\n    <LoadMoreBtn type=\"button\" onClick={onLoadMore}>\n      Load more\n    </LoadMoreBtn>\n  );\n};\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import styled from '@emotion/styled';\n\nexport const Heading = styled.h1`\n  max-width: 1280px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 12px;\n  padding-right: 12px;\n\n  @media (min-width: 768px) {\n    width: 768px;\n  }\n  @media (min-width: 1280px) {\n    width: 1280px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport Gallery from 'components/Gallery/Gallery';\nimport { getMoviesInfo, getPopularMovie } from 'services/getMovies';\nimport Button from 'components/LoadMoreBtn/LoadMoreBtn';\nimport { Heading } from './HomePage.styled';\nimport ScrollToTop from 'components/Cast/GoToTopBtn/GoToTopBtn';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsloading] = useState(false);\n  const [totalPages, settTotalPages] = useState(0);\n  const homeLocation = useLocation();\n  useEffect(() => {\n    setIsloading(true);\n\n    getPopularMovie(page)\n      .then(response => {\n        if (response.status !== 200) {\n          throw new Error(`Error in request: ${response.status}`);\n        }\n        settTotalPages(response.data.total_pages);\n\n        setMovies(prevState => [\n          ...prevState,\n          ...getMoviesInfo(response.data.results),\n        ]);\n      })\n      .catch(e => console.error(e))\n      .finally(() => setIsloading(false));\n  }, [page]);\n\n  const onLoadMore = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <div>\n          <Heading>Trending today</Heading>\n\n          {movies.length && (\n            <>\n              <Gallery movies={movies} location={homeLocation} />\n              {page < totalPages && <Button onLoadMore={onLoadMore} />}\n            </>\n          )}\n          <ScrollToTop />\n        </div>\n      )}\n    </>\n  );\n};\nexport default HomePage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ae38d5c8baf36c9c4ca14e9456f3c0fd';\n//зображення що завантажиться при відсутності постеру\nconst DEFAULT_IMG =\n  'https://upload.wikimedia.org/wikipedia/commons/3/3f/Placeholder_view_vector.svg';\nconst DEFAULT_AVATAR =\n  'https://cdn3.iconfinder.com/data/icons/avatars-15/64/_Ninja-2-512.png';\n\n//запит до серверу, що отримує дані популярних фільмів\nexport const getPopularMovie = async pageNumber => {\n  const data = await axios(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${\n      pageNumber ? pageNumber : 1\n    }`\n  );\n  return data;\n};\n\n//запит на сервер, пошук фільмів за ключовими словами\nexport const getMovieByQuery = async (query, pageNumber) => {\n  const data = await axios(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${\n      pageNumber ? pageNumber : 1\n    }`\n  );\n  return data;\n};\n\n// функція обробник повернення масиву об\"єктів даних про фільми\nexport const getMoviesInfo = moviesArr => {\n  return moviesArr.map(movie => {\n    const movieInfo = {\n      title: movie.title ? movie.title : movie.name, //назва\n      w300imgUrl: movie.poster_path\n        ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n        : DEFAULT_IMG, // постер, або дефолтна картинка за відсутності постера\n      w500imgUrl: movie.poster_path\n        ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n        : DEFAULT_IMG, // постер, або дефолтна картинка за відсутності постера\n      year: movie.release_date\n        ? movie.release_date.slice(0, 4)\n        : movie?.first_air_date?.slice(0, 4) || '', //рік\n      id: movie.id,\n    };\n    return movieInfo;\n  });\n};\n\n//запит, що отримує інформацію про фільм за ID\nexport const getMovieById = async id => {\n  const data = await axios(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\n//запит на акторський склад\nexport const getCastInfo = async id => {\n  const data = await axios(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const getCastInfoObj = castArr => {\n  return castArr.map(actor => {\n    const castInfo = {\n      name: actor.name ? actor.name : actor.original_name,\n      w300imgUrl: actor.poster_path\n        ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n        : DEFAULT_IMG,\n      w500imgUrl: actor.profile_path\n        ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n        : DEFAULT_IMG,\n      character: actor.character,\n      id: actor.id,\n    };\n    return castInfo;\n  });\n};\n\nexport const getReviews = async id => {\n  console.log(id);\n  const data = await axios(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\nexport const getReviewsInfo = reviewsArr => {\n  return reviewsArr.map(review => {\n    const reviewInfo = {\n      avatar_path: review.author_details.avatar_path.includes('https')\n        ? DEFAULT_AVATAR\n        : `https://www.themoviedb.org/t/p/w300_and_h300_face${review.author_details.avatar_path}`,\n      username: review.author_details.username,\n      name: review.author_details.name\n        ? review.author_details.name\n        : review.author,\n      content: review.content,\n      id: review.id,\n    };\n    return reviewInfo;\n  });\n};\n\n// функція обробник повертає об\"єкт з детальною інформацією по фільму, в інших файлах не використовується\nexport const getMoviesDetails = movie => {\n  let genres = movie.genres.map(elem => elem.name);\n  let cutGenres;\n  if (genres.length === 0) {\n    cutGenres = 'Other';\n  } else if (genres.length <= 2) {\n    cutGenres = genres.join(', ');\n  } else {\n    cutGenres = `${genres.slice(0, 2).join(', ')}, Other`;\n  }\n  return {\n    title: movie.title ? movie.title : movie.name, //назва\n    titleOriginal: movie.original_title, // оригінальна назва\n    popularity: movie.popularity, //популярність\n    vote: movie.vote_average, // середній рейтинг\n    votes: movie.vote_count, // кількість голосів\n    w300imgUrl: movie.poster_path\n      ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n      : DEFAULT_IMG, // постер, або дефолтна картинка за відсутності постера\n    w500imgUrl: movie.poster_path\n      ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n      : DEFAULT_IMG, // постер, або дефолтна картинка за відсутності постера\n    genres: cutGenres, // жанри\n    about: movie.overview,\n    year: movie.release_date\n      ? movie.release_date.slice(0, 4)\n      : movie?.first_air_date?.slice(0, 4) || '',\n  };\n};\n"],"names":["Btn","styled","Icon","FaAngleUp","useState","showTopBtn","setShowTopBtn","useEffect","window","addEventListener","scrollY","className","onClick","scrollTo","top","behavior","GalleryGrid","GalleryItemCard","GalleryCardInfo","GalleryLink","Link","GalleryImg","useLocation","require","movie","title","w300imgUrl","w500imgUrl","year","id","location","to","state","from","srcSet","sizes","src","alt","loading","movies","map","LoadMoreBtn","onLoadMore","type","Heading","setMovies","page","setPage","isLoading","setIsloading","totalPages","settTotalPages","homeLocation","getPopularMovie","then","response","status","Error","data","total_pages","prevState","getMoviesInfo","results","catch","e","console","error","finally","Loader","length","Gallery","BASE_URL","API_KEY","DEFAULT_IMG","pageNumber","axios","getMovieByQuery","query","moviesArr","name","poster_path","release_date","slice","first_air_date","getMovieById","getCastInfo","getCastInfoObj","castArr","actor","original_name","profile_path","character","getReviews","log","getReviewsInfo","reviewsArr","review","avatar_path","author_details","includes","username","author","content","getMoviesDetails","cutGenres","genres","elem","join","titleOriginal","original_title","popularity","vote","vote_average","votes","vote_count","about","overview"],"sourceRoot":""}